<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>CreateSelectedOffers</name>
        <label>Create Selected Offers</label>
        <locationX>314</locationX>
        <locationY>998</locationY>
        <actionName>SelectedOfferCreateAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Success_Screen</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>input</name>
            <value>
                <elementReference>v_apexActionInput</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SelectedOfferCreateAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Assign_To_Apex_Action_Input_Variable</name>
        <label>Assign To Apex Action Input Variable</label>
        <locationX>314</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Select_Plan</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>|</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>v_selectedCoveredIndividuals</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>|</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>v_coverageTypeText</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>|</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Waive_Coverage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>|</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>v_apexActionInput</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateSelectedOffers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_To_Selected_Covered_Individual_Variable</name>
        <label>Assign To Selected Covered Individual Variable</label>
        <locationX>314</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>v_selectedCoveredIndividuals</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Covered_Individual</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_To_Apex_Action_Input_Variable</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Count_Open_Coverage_Periods</name>
        <label>Count Open Coverage Periods</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>v_openCoveragePeriodSize</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Open_Coverage_Periods</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Count_Valid_Events</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Count_Valid_Events</name>
        <label>Count Valid Events</label>
        <locationX>182</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>v_validEventCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Valid_Events</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Open_Enrollment</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Open_Enrollment</name>
        <label>Check Open Enrollment</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>Select_Offer_1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_Open_Enrollment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>v_openCoveragePeriodSize</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>v_validEventCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Open_Enrollment_Error_Screen</targetReference>
            </connector>
            <label>No Open Enrollment</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>BenefitIndividual</name>
        <dataType>String</dataType>
        <displayField>Full_Name__c</displayField>
        <object>Benefit_Individual__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>GetCoverageTypes</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>Coverage_Type__c</object>
        <outputAssignments>
            <assignToReference>v_coverageTypeText</assignToReference>
            <field>Name</field>
        </outputAssignments>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>PlanList</name>
        <dataType>String</dataType>
        <displayField>Plan_Selection_Display__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Plan_Year_Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Plan_Year_End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <object>Plan__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>SelectAnEvent</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Enrollment_Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Enrollment_End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <object>Benefit_Event__c</object>
        <outputAssignments>
            <assignToReference>v_PrimaryHolderFromEvent</assignToReference>
            <field>Benefit_Individual__c</field>
        </outputAssignments>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>CustomErrorFormula</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!$Flow.FaultMessage},&quot;E001&quot;), &quot;You must select yourself as a covered individual.&quot;,
IF(CONTAINS({!$Flow.FaultMessage},&quot;E002&quot;), &quot;You must select a plan with coverage level as Employee + Family to cover the Child.&quot;,
IF(CONTAINS({!$Flow.FaultMessage},&quot;E003&quot;), &quot;You must select a plan with coverage level as Employee + Spouse to cover the Spouse.&quot;, &quot;An unmanaged error occurred. Please contact your Administrator and try again&quot;))
)</expression>
    </formulas>
    <interviewLabel>Select Offer 1 {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>Select Benefit</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Open_Coverage_Periods</name>
        <label>Get Open Coverage Periods</label>
        <locationX>182</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Valid_Events</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Open_Enrollment_Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Open_Enrollment_End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Coverage_Period__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Valid_Events</name>
        <label>Get Valid Events</label>
        <locationX>182</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Count_Open_Coverage_Periods</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Enrollment_Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Enrollment_End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Benefit_Event__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Error_Screen</name>
        <label>Error Screen</label>
        <locationX>578</locationX>
        <locationY>1106</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Error_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px; color: rgb(169, 15, 15);&quot;&gt;{!CustomErrorFormula}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Open_Enrollment_Error_Screen</name>
        <label>Open Enrollment Error Screen</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>No_Open_Enrollment_Error</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px; color: rgb(209, 13, 13);&quot;&gt;There is no open enrollment or a valid event to select benefits.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Select_Offer_1</name>
        <label>Select Offer 1</label>
        <locationX>314</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Assign_To_Selected_Covered_Individual_Variable</targetReference>
        </connector>
        <fields>
            <name>Select_Coverage_Type</name>
            <choiceReferences>GetCoverageTypes</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select Coverage Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Waive_Coverage</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Select_Plan</name>
            <choiceReferences>PlanList</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select Plan</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Waive_Coverage</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Covered_Individual</name>
            <choiceReferences>BenefitIndividual</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Covered Individual</fieldText>
            <fieldType>MultiSelectPicklist</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Waive_Coverage</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Select_Plan</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Waive_Coverage</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <booleanValue>true</booleanValue>
            </defaultValue>
            <fieldText>Waive Coverage</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;When you waive coverage, you need to select a specific plan or covered individual.&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Success_Screen</name>
        <label>Success Screen</label>
        <locationX>314</locationX>
        <locationY>1106</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Success_Message</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(22, 141, 9); font-size: 16px;&quot;&gt;Changes Saved Successfully!&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Open_Coverage_Periods</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItem_CoveredIndividualFilter</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Benefit_Individual__c</objectType>
    </variables>
    <variables>
        <name>v_apexActionInput</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>v_coverageTypeText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>v_openCoveragePeriodSize</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>v_PrimaryHolderFromEvent</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>v_selectedCoveredIndividuals</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>v_validEventCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
